#include <BluetoothSerial.h>

// 检查是否启用了蓝牙功能
#if !defined(CONFIG_BT_ENABLED) || !defined(CONFIG_BLUEDROID_ENABLED)
#error Bluetooth is not enabled! Please run `make menuconfig` to enable it
#endif

// 检查是否允许使用蓝牙经典模式
#if !defined(CONFIG_BT_SPP_ENABLED)
#error Serial Bluetooth not available or not enabled. It is only available for the ESP32 chip.
#endif

BluetoothSerial SerialBT;

// 常量定义
const int GPS_BAUD_RATE = 115200;
const int SERIAL_BAUD_RATE = 115200;
const char* BT_DEVICE_NAME = "Air551G-GNSS";
const int LED_ERROR_PIN = 2; // 使用GPIO2
const int GPS_BUFFER_SIZE = 1024;

// 全局变量
char gpsBuffer[GPS_BUFFER_SIZE];
int bufferIndex = 0;

void setup() {
  // 初始化串口
  Serial.begin(SERIAL_BAUD_RATE);
  Serial2.begin(GPS_BAUD_RATE, SERIAL_8N1, 16, 17);  // RX: GPIO16, TX: GPIO17

  // 初始化蓝牙
  SerialBT.begin(BT_DEVICE_NAME);
  Serial.println("Bluetooth device started, you can pair it with Bluetooth!");

  // 初始化LED引脚
  pinMode(LED_ERROR_PIN, OUTPUT);
}

void loop() {
  // 读取GPS数据
  while (Serial2.available()) {
    char c = Serial2.read();
    
    // 将字符添加到缓冲区
    if (bufferIndex < GPS_BUFFER_SIZE - 1) {
      gpsBuffer[bufferIndex++] = c;
    }
    
    // 如果接收到换行符，处理并发送数据
    if (c == '\n') {
      gpsBuffer[bufferIndex] = '\0';  // 添加字符串结束符
      
      // 检查是否是有效的NMEA语句
      if (gpsBuffer[0] == '$') {
        // 通过蓝牙发送数据
        SerialBT.write((uint8_t*)gpsBuffer, bufferIndex);
        
        // 在串口打印NMEA语句
        Serial.print(gpsBuffer);
      }
      
      // 重置缓冲区
      bufferIndex = 0;
    }
  }

  // 处理蓝牙接收到的数据（如果需要）
  if (SerialBT.available()) {
    Serial.write(SerialBT.read());
  }
}

void logError(const char* message) {
  Serial.print("ERROR: ");
  Serial.println(message);
  
  // 错误LED闪烁
  for (int i = 0; i < 10; i++) { // 闪烁10次
    digitalWrite(LED_ERROR_PIN, HIGH);
    delay(100);  // 闪烁时间
    digitalWrite(LED_ERROR_PIN, LOW);
    delay(100);
  }
}
